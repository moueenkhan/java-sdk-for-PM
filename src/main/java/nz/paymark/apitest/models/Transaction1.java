/*
 * PayMarkEFTPOSLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.paymark.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Transaction1 type.
 */
public class Transaction1 {
    private int amount;
    private String transactionType;
    private String currency;
    private String description;
    private String orderId;

    /**
     * Default constructor.
     */
    public Transaction1() {
    }

    /**
     * Initialization constructor.
     * @param  amount  int value for amount.
     * @param  transactionType  String value for transactionType.
     * @param  currency  String value for currency.
     * @param  description  String value for description.
     * @param  orderId  String value for orderId.
     */
    public Transaction1(
            int amount,
            String transactionType,
            String currency,
            String description,
            String orderId) {
        this.amount = amount;
        this.transactionType = transactionType;
        this.currency = currency;
        this.description = description;
        this.orderId = orderId;
    }

    /**
     * Getter for Amount.
     * @return Returns the int
     */
    @JsonGetter("amount")
    public int getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * @param amount Value for int
     */
    @JsonSetter("amount")
    public void setAmount(int amount) {
        this.amount = amount;
    }

    /**
     * Getter for TransactionType.
     * @return Returns the String
     */
    @JsonGetter("transactionType")
    public String getTransactionType() {
        return transactionType;
    }

    /**
     * Setter for TransactionType.
     * @param transactionType Value for String
     */
    @JsonSetter("transactionType")
    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }

    /**
     * Getter for Currency.
     * @return Returns the String
     */
    @JsonGetter("currency")
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for OrderId.
     * @return Returns the String
     */
    @JsonGetter("orderId")
    public String getOrderId() {
        return orderId;
    }

    /**
     * Setter for OrderId.
     * @param orderId Value for String
     */
    @JsonSetter("orderId")
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    /**
     * Converts this Transaction1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Transaction1 [" + "amount=" + amount + ", transactionType=" + transactionType
                + ", currency=" + currency + ", description=" + description + ", orderId=" + orderId
                + "]";
    }

    /**
     * Builds a new {@link Transaction1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Transaction1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(amount, transactionType, currency, description, orderId);
        return builder;
    }

    /**
     * Class to build instances of {@link Transaction1}.
     */
    public static class Builder {
        private int amount;
        private String transactionType;
        private String currency;
        private String description;
        private String orderId;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  amount  int value for amount.
         * @param  transactionType  String value for transactionType.
         * @param  currency  String value for currency.
         * @param  description  String value for description.
         * @param  orderId  String value for orderId.
         */
        public Builder(int amount, String transactionType, String currency, String description,
                String orderId) {
            this.amount = amount;
            this.transactionType = transactionType;
            this.currency = currency;
            this.description = description;
            this.orderId = orderId;
        }

        /**
         * Setter for amount.
         * @param  amount  int value for amount.
         * @return Builder
         */
        public Builder amount(int amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for transactionType.
         * @param  transactionType  String value for transactionType.
         * @return Builder
         */
        public Builder transactionType(String transactionType) {
            this.transactionType = transactionType;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for orderId.
         * @param  orderId  String value for orderId.
         * @return Builder
         */
        public Builder orderId(String orderId) {
            this.orderId = orderId;
            return this;
        }

        /**
         * Builds a new {@link Transaction1} object using the set fields.
         * @return {@link Transaction1}
         */
        public Transaction1 build() {
            return new Transaction1(amount, transactionType, currency, description, orderId);
        }
    }
}
